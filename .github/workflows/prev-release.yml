name: ðŸš€Preview Release

env:
  PROJECT_NAME: Velaptor
  BUILD_CONFIG: Debug
  RELEASE_NAME: Preview
  NET_SDK_VERSION: 5.0.x # Changing this means changing ARTIFACT_FOLDER_NAME
  ARTIFACT_FOLDER_NAME: '5.0' # Changing this means changing NET_SDK_VERSION

on:
  workflow_dispatch:
  push:
    branches: [ release/v*.*.* ]
    paths-ignore:
      - ".github/**"
      - 'Documentation/**'
      - '.editorconfig'
      - '*.runsettings'
      - '.gitattributes'
      - '.gitignore'
      - '*.md'
      - '.vscode/**'

jobs:
  Validate_Version:
    name: Validate Version
    runs-on: windows-latest
    environment: preview
    steps:
    - uses: actions/checkout@v2

    - name: Get Version From Project File
      id: prev-version
      uses: KinsonDigital/vget@v0.4.0
      with:
        repo-owner-and-name: '${{ github.repository }}'
        branch: '${{ github.ref }}'
        relative-file-path: '${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj'
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Validate Preview Version
      uses: KinsonDigital/VersionValidator@v1.0.0-preview.2
      with:
        nuget-package-name: "KinsonDigital.Velaptor"
        version: "${{ steps.prev-version.outputs.version }}"
        check-nuget: "true"
        fail-if-nuget-version-exists: "true"

  Library_Build_And_Test:
    name: Build & Test (Library)
    runs-on: windows-latest
    needs: Validate_Version
    environment: preview
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.NET_SDK_VERSION }}

    - name: Restore Dependencies
      run: dotnet restore "${{ github.workspace }}/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj"

    - name: Build
      run: dotnet build "${{ github.workspace }}/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj" -c ${{ env.BUILD_CONFIG }} --no-restore

    - name: Execute Unit Tests
      run: dotnet test "${{ github.workspace }}/Testing/${{ env.PROJECT_NAME }}Tests/${{ env.PROJECT_NAME }}Tests.csproj" -c ${{ env.BUILD_CONFIG }} --collect:"XPlat Code Coverage" --no-restore

    - name: Publish Code Coverage Results
      uses: codecov/codecov-action@v1.5.2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ${{ github.workspace }}/Testing/${{ env.PROJECT_NAME }}Tests/TestResults/**/coverage.cobertura.xml

    - name: Publish Build Artifacts
      uses: actions/upload-artifact@v2.2.3
      with:
        name: ${{ env.PROJECT_NAME }} Build Artifacts
        path: ${{ github.workspace }}/${{ env.PROJECT_NAME }}/bin/${{ env.BUILD_CONFIG }}/net${{ env.ARTIFACT_FOLDER_NAME }}
        error: There was an issue uploading the build artifact

    - name: Setup Nuget
      uses: NuGet/setup-nuget@v1.0.5

    - name: Create Nuget Package
      run: dotnet pack "${{ github.workspace }}/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj" -o "${{ github.workspace }}" -c ${{ env.BUILD_CONFIG }}

    - name: Get Version From Project File
      id: prev-version
      uses: KinsonDigital/vget@v0.4.0
      with:
        repo-owner-and-name: '${{ github.repository }}'
        branch: '${{ github.ref }}'
        relative-file-path: '${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj'
        github-token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Publish Nuget Package
      run: dotnet nuget push "${{ github.workspace }}/KinsonDigital.${{ env.PROJECT_NAME }}.${{ steps.prev-version.outputs.version }}.nupkg" --api-key ${{ secrets.NUGET_ORG_API_KEY }} --source https://api.nuget.org/v3/index.json

  Build_And_Release_Testing_App:
    name: Build & Release (Testing App)
    runs-on: windows-latest
    needs: Validate_Version
    environment: preview
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.NET_SDK_VERSION }}

    - name: Restore Dependencies
      run: dotnet restore "${{ github.workspace }}/Testing/${{ env.PROJECT_NAME }}Testing/${{ env.PROJECT_NAME }}Testing.csproj"

    - name: Perform App Publish
      run: |
        dotnet publish "${{ github.workspace }}/Testing/${{ env.PROJECT_NAME }}Testing/${{ env.PROJECT_NAME }}Testing.csproj" `
          -c ${{ env.BUILD_CONFIG }} `
          -o "${{ github.workspace }}/Testing/PreviewRelease/" `
          --no-restore `
        
    - name: Get Version From Project File
      id: prev-version
      uses: KinsonDigital/vget@v0.4.0
      with:
        repo-owner-and-name: '${{ github.repository }}'
        branch: '${{ github.ref }}'
        relative-file-path: '${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj'
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Package Testing App
      run: |
        Compress-Archive -Path "${{ github.workspace }}/Testing/PreviewRelease" `
          -DestinationPath "${{ github.workspace }}/${{ env.PROJECT_NAME }}-TestingApp-${{ steps.prev-version.outputs.version }}.zip" `
          -Force

    - name: Release Testing Application
      uses: softprops/action-gh-release@v0.1.12
      with:
        tag_name: v${{ steps.prev-version.outputs.version }}
        body: |
          ${{ env.PROJECT_NAME }} - ${{ env.RELEASE_NAME }} Release [v${{ steps.prev-version.outputs.version }}](https://github.com/KinsonDigital/${{ env.PROJECT_NAME }}/tree/v${{ steps.prev-version.outputs.version }})
          Execute the testing application in the **_${{ env.PROJECT_NAME }}-TestingApp-v${{ steps.prev-version.outputs.version }}.zip_** file to perform manual testing.
        files: ${{ env.PROJECT_NAME }}-TestingApp-v${{ steps.prev-version.outputs.version }}.zip
        prerelease: true
