// <copyright file="KeyCodeExtensionsTests.cs" company="KinsonDigital">
// Copyright (c) KinsonDigital. All rights reserved.
// </copyright>

#pragma warning disable SA1514

namespace VelaptorTests.ExtensionMethods;

using System;
using System.Collections.Generic;
using FluentAssertions;
using Velaptor.ExtensionMethods;
using Velaptor.Input;
using Xunit;

/// <summary>
/// Tests the extension methods for the <see cref="KeyCode"/> enum.
/// </summary>
public class KeyCodeExtensionsTests
{
    #region Test Data
    /// <summary>
    /// Gets the data for testing the <see cref="KeyCodeExtensions.IsLetterKey(KeyCode)"/> method.
    /// </summary>
    public static IEnumerable<object[]> IsLetterKeyTestData =>
        new List<object[]>
        {
            new object[] { KeyCode.A, true },
            new object[] { KeyCode.B, true },
            new object[] { KeyCode.C, true },
            new object[] { KeyCode.D, true },
            new object[] { KeyCode.E, true },
            new object[] { KeyCode.F, true },
            new object[] { KeyCode.G, true },
            new object[] { KeyCode.H, true },
            new object[] { KeyCode.I, true },
            new object[] { KeyCode.J, true },
            new object[] { KeyCode.K, true },
            new object[] { KeyCode.L, true },
            new object[] { KeyCode.M, true },
            new object[] { KeyCode.N, true },
            new object[] { KeyCode.O, true },
            new object[] { KeyCode.P, true },
            new object[] { KeyCode.Q, true },
            new object[] { KeyCode.R, true },
            new object[] { KeyCode.S, true },
            new object[] { KeyCode.T, true },
            new object[] { KeyCode.U, true },
            new object[] { KeyCode.V, true },
            new object[] { KeyCode.W, true },
            new object[] { KeyCode.X, true },
            new object[] { KeyCode.Y, true },
            new object[] { KeyCode.Z, true },
            new object[] { KeyCode.Space, true },
            new object[] { KeyCode.Unknown, false },
            new object[] { KeyCode.Apostrophe, false },
            new object[] { KeyCode.Comma, false },
            new object[] { KeyCode.Minus, false },
            new object[] { KeyCode.Period, false },
            new object[] { KeyCode.Slash, false },
            new object[] { KeyCode.D0, false },
            new object[] { KeyCode.D1, false },
            new object[] { KeyCode.D2, false },
            new object[] { KeyCode.D3, false },
            new object[] { KeyCode.D4, false },
            new object[] { KeyCode.D5, false },
            new object[] { KeyCode.D6, false },
            new object[] { KeyCode.D7, false },
            new object[] { KeyCode.D8, false },
            new object[] { KeyCode.D9, false },
            new object[] { KeyCode.Semicolon, false },
            new object[] { KeyCode.Equal, false },
            new object[] { KeyCode.LeftBracket, false },
            new object[] { KeyCode.Backslash, false },
            new object[] { KeyCode.RightBracket, false },
            new object[] { KeyCode.GraveAccent, false },
            new object[] { KeyCode.Escape, false },
            new object[] { KeyCode.Enter, false },
            new object[] { KeyCode.Tab, false },
            new object[] { KeyCode.Backspace, false },
            new object[] { KeyCode.Insert, false },
            new object[] { KeyCode.Delete, false },
            new object[] { KeyCode.Right, false },
            new object[] { KeyCode.Left, false },
            new object[] { KeyCode.Down, false },
            new object[] { KeyCode.Up, false },
            new object[] { KeyCode.PageUp, false },
            new object[] { KeyCode.PageDown, false },
            new object[] { KeyCode.Home, false },
            new object[] { KeyCode.End, false },
            new object[] { KeyCode.CapsLock, false },
            new object[] { KeyCode.ScrollLock, false },
            new object[] { KeyCode.NumLock, false },
            new object[] { KeyCode.PrintScreen, false },
            new object[] { KeyCode.Pause, false },
            new object[] { KeyCode.F1, false },
            new object[] { KeyCode.F2, false },
            new object[] { KeyCode.F3, false },
            new object[] { KeyCode.F4, false },
            new object[] { KeyCode.F5, false },
            new object[] { KeyCode.F6, false },
            new object[] { KeyCode.F7, false },
            new object[] { KeyCode.F8, false },
            new object[] { KeyCode.F9, false },
            new object[] { KeyCode.F10, false },
            new object[] { KeyCode.F11, false },
            new object[] { KeyCode.F12, false },
            new object[] { KeyCode.F13, false },
            new object[] { KeyCode.F14, false },
            new object[] { KeyCode.F15, false },
            new object[] { KeyCode.F16, false },
            new object[] { KeyCode.F17, false },
            new object[] { KeyCode.F18, false },
            new object[] { KeyCode.F19, false },
            new object[] { KeyCode.F20, false },
            new object[] { KeyCode.F21, false },
            new object[] { KeyCode.F22, false },
            new object[] { KeyCode.F23, false },
            new object[] { KeyCode.F24, false },
            new object[] { KeyCode.F25, false },
            new object[] { KeyCode.KeyPad0, false },
            new object[] { KeyCode.KeyPad1, false },
            new object[] { KeyCode.KeyPad2, false },
            new object[] { KeyCode.KeyPad3, false },
            new object[] { KeyCode.KeyPad4, false },
            new object[] { KeyCode.KeyPad5, false },
            new object[] { KeyCode.KeyPad6, false },
            new object[] { KeyCode.KeyPad7, false },
            new object[] { KeyCode.KeyPad8, false },
            new object[] { KeyCode.KeyPad9, false },
            new object[] { KeyCode.KeyPadDecimal, false },
            new object[] { KeyCode.KeyPadDivide, false },
            new object[] { KeyCode.KeyPadMultiply, false },
            new object[] { KeyCode.KeyPadSubtract, false },
            new object[] { KeyCode.KeyPadAdd, false },
            new object[] { KeyCode.KeyPadEnter, false },
            new object[] { KeyCode.KeyPadEqual, false },
            new object[] { KeyCode.LeftShift, false },
            new object[] { KeyCode.LeftControl, false },
            new object[] { KeyCode.LeftAlt, false },
            new object[] { KeyCode.LeftSuper, false },
            new object[] { KeyCode.RightShift, false },
            new object[] { KeyCode.RightControl, false },
            new object[] { KeyCode.RightAlt, false },
            new object[] { KeyCode.RightSuper, false },
            new object[] { KeyCode.Menu, false },
        };

    /// <summary>
    /// Gets the data for testing the <see cref="KeyCodeExtensions.IsNumberKey(KeyCode)"/> method.
    /// </summary>
    public static IEnumerable<object[]> IsNumberKeyTestData =>
        new List<object[]>
        {
            new object[] { KeyCode.D0, true },
            new object[] { KeyCode.D1, true },
            new object[] { KeyCode.D2, true },
            new object[] { KeyCode.D3, true },
            new object[] { KeyCode.D4, true },
            new object[] { KeyCode.D5, true },
            new object[] { KeyCode.D6, true },
            new object[] { KeyCode.D7, true },
            new object[] { KeyCode.D8, true },
            new object[] { KeyCode.D9, true },
            new object[] { KeyCode.KeyPad0, true },
            new object[] { KeyCode.KeyPad1, true },
            new object[] { KeyCode.KeyPad2, true },
            new object[] { KeyCode.KeyPad3, true },
            new object[] { KeyCode.KeyPad4, true },
            new object[] { KeyCode.KeyPad5, true },
            new object[] { KeyCode.KeyPad6, true },
            new object[] { KeyCode.KeyPad7, true },
            new object[] { KeyCode.KeyPad8, true },
            new object[] { KeyCode.KeyPad9, true },
            new object[] { KeyCode.A, false },
            new object[] { KeyCode.B, false },
            new object[] { KeyCode.C, false },
            new object[] { KeyCode.D, false },
            new object[] { KeyCode.E, false },
            new object[] { KeyCode.F, false },
            new object[] { KeyCode.G, false },
            new object[] { KeyCode.H, false },
            new object[] { KeyCode.I, false },
            new object[] { KeyCode.J, false },
            new object[] { KeyCode.K, false },
            new object[] { KeyCode.L, false },
            new object[] { KeyCode.M, false },
            new object[] { KeyCode.N, false },
            new object[] { KeyCode.O, false },
            new object[] { KeyCode.P, false },
            new object[] { KeyCode.Q, false },
            new object[] { KeyCode.R, false },
            new object[] { KeyCode.S, false },
            new object[] { KeyCode.T, false },
            new object[] { KeyCode.U, false },
            new object[] { KeyCode.V, false },
            new object[] { KeyCode.W, false },
            new object[] { KeyCode.X, false },
            new object[] { KeyCode.Y, false },
            new object[] { KeyCode.Z, false },
            new object[] { KeyCode.Space, false },
            new object[] { KeyCode.Unknown, false },
            new object[] { KeyCode.Apostrophe, false },
            new object[] { KeyCode.Comma, false },
            new object[] { KeyCode.Minus, false },
            new object[] { KeyCode.Period, false },
            new object[] { KeyCode.Slash, false },
            new object[] { KeyCode.Semicolon, false },
            new object[] { KeyCode.Equal, false },
            new object[] { KeyCode.LeftBracket, false },
            new object[] { KeyCode.Backslash, false },
            new object[] { KeyCode.RightBracket, false },
            new object[] { KeyCode.GraveAccent, false },
            new object[] { KeyCode.Escape, false },
            new object[] { KeyCode.Enter, false },
            new object[] { KeyCode.Tab, false },
            new object[] { KeyCode.Backspace, false },
            new object[] { KeyCode.Insert, false },
            new object[] { KeyCode.Delete, false },
            new object[] { KeyCode.Right, false },
            new object[] { KeyCode.Left, false },
            new object[] { KeyCode.Down, false },
            new object[] { KeyCode.Up, false },
            new object[] { KeyCode.PageUp, false },
            new object[] { KeyCode.PageDown, false },
            new object[] { KeyCode.Home, false },
            new object[] { KeyCode.End, false },
            new object[] { KeyCode.CapsLock, false },
            new object[] { KeyCode.ScrollLock, false },
            new object[] { KeyCode.NumLock, false },
            new object[] { KeyCode.PrintScreen, false },
            new object[] { KeyCode.Pause, false },
            new object[] { KeyCode.F1, false },
            new object[] { KeyCode.F2, false },
            new object[] { KeyCode.F3, false },
            new object[] { KeyCode.F4, false },
            new object[] { KeyCode.F5, false },
            new object[] { KeyCode.F6, false },
            new object[] { KeyCode.F7, false },
            new object[] { KeyCode.F8, false },
            new object[] { KeyCode.F9, false },
            new object[] { KeyCode.F10, false },
            new object[] { KeyCode.F11, false },
            new object[] { KeyCode.F12, false },
            new object[] { KeyCode.F13, false },
            new object[] { KeyCode.F14, false },
            new object[] { KeyCode.F15, false },
            new object[] { KeyCode.F16, false },
            new object[] { KeyCode.F17, false },
            new object[] { KeyCode.F18, false },
            new object[] { KeyCode.F19, false },
            new object[] { KeyCode.F20, false },
            new object[] { KeyCode.F21, false },
            new object[] { KeyCode.F22, false },
            new object[] { KeyCode.F23, false },
            new object[] { KeyCode.F24, false },
            new object[] { KeyCode.F25, false },
            new object[] { KeyCode.KeyPadDecimal, false },
            new object[] { KeyCode.KeyPadDivide, false },
            new object[] { KeyCode.KeyPadMultiply, false },
            new object[] { KeyCode.KeyPadSubtract, false },
            new object[] { KeyCode.KeyPadAdd, false },
            new object[] { KeyCode.KeyPadEnter, false },
            new object[] { KeyCode.KeyPadEqual, false },
            new object[] { KeyCode.LeftShift, false },
            new object[] { KeyCode.LeftControl, false },
            new object[] { KeyCode.LeftAlt, false },
            new object[] { KeyCode.LeftSuper, false },
            new object[] { KeyCode.RightShift, false },
            new object[] { KeyCode.RightControl, false },
            new object[] { KeyCode.RightAlt, false },
            new object[] { KeyCode.RightSuper, false },
            new object[] { KeyCode.Menu, false },
        };

    /// <summary>
    /// Gets the data for testing the <see cref="KeyCodeExtensions.IsSymbolKey(KeyCode)"/> method.
    /// </summary>
    public static IEnumerable<object[]> IsSymbolKeyTestData =>
        new List<object[]>
        {
            new object[] { KeyCode.A, false },
            new object[] { KeyCode.B, false },
            new object[] { KeyCode.C, false },
            new object[] { KeyCode.D, false },
            new object[] { KeyCode.E, false },
            new object[] { KeyCode.F, false },
            new object[] { KeyCode.G, false },
            new object[] { KeyCode.H, false },
            new object[] { KeyCode.I, false },
            new object[] { KeyCode.J, false },
            new object[] { KeyCode.K, false },
            new object[] { KeyCode.L, false },
            new object[] { KeyCode.M, false },
            new object[] { KeyCode.N, false },
            new object[] { KeyCode.O, false },
            new object[] { KeyCode.P, false },
            new object[] { KeyCode.Q, false },
            new object[] { KeyCode.R, false },
            new object[] { KeyCode.S, false },
            new object[] { KeyCode.T, false },
            new object[] { KeyCode.U, false },
            new object[] { KeyCode.V, false },
            new object[] { KeyCode.W, false },
            new object[] { KeyCode.X, false },
            new object[] { KeyCode.Y, false },
            new object[] { KeyCode.Z, false },
            new object[] { KeyCode.Space, false },
            new object[] { KeyCode.Unknown, false },
            new object[] { KeyCode.D0, false },
            new object[] { KeyCode.D1, false },
            new object[] { KeyCode.D2, false },
            new object[] { KeyCode.D3, false },
            new object[] { KeyCode.D4, false },
            new object[] { KeyCode.D5, false },
            new object[] { KeyCode.D6, false },
            new object[] { KeyCode.D7, false },
            new object[] { KeyCode.D8, false },
            new object[] { KeyCode.D9, false },
            new object[] { KeyCode.Semicolon, true },
            new object[] { KeyCode.Equal, true },
            new object[] { KeyCode.Comma, true },
            new object[] { KeyCode.Minus, true },
            new object[] { KeyCode.Period, true },
            new object[] { KeyCode.Slash, true },
            new object[] { KeyCode.LeftBracket, true },
            new object[] { KeyCode.RightBracket, true },
            new object[] { KeyCode.Apostrophe, true },
            new object[] { KeyCode.KeyPadDivide, true },
            new object[] { KeyCode.KeyPadMultiply, true },
            new object[] { KeyCode.KeyPadSubtract, true },
            new object[] { KeyCode.KeyPadAdd, true },
            new object[] { KeyCode.KeyPadDecimal, true },
            new object[] { KeyCode.Backslash, true },
            new object[] { KeyCode.GraveAccent, true },
            new object[] { KeyCode.Escape, false },
            new object[] { KeyCode.Enter, false },
            new object[] { KeyCode.Tab, false },
            new object[] { KeyCode.Backspace, false },
            new object[] { KeyCode.Insert, false },
            new object[] { KeyCode.Delete, false },
            new object[] { KeyCode.Right, false },
            new object[] { KeyCode.Left, false },
            new object[] { KeyCode.Down, false },
            new object[] { KeyCode.Up, false },
            new object[] { KeyCode.PageUp, false },
            new object[] { KeyCode.PageDown, false },
            new object[] { KeyCode.Home, false },
            new object[] { KeyCode.End, false },
            new object[] { KeyCode.CapsLock, false },
            new object[] { KeyCode.ScrollLock, false },
            new object[] { KeyCode.NumLock, false },
            new object[] { KeyCode.PrintScreen, false },
            new object[] { KeyCode.Pause, false },
            new object[] { KeyCode.F1, false },
            new object[] { KeyCode.F2, false },
            new object[] { KeyCode.F3, false },
            new object[] { KeyCode.F4, false },
            new object[] { KeyCode.F5, false },
            new object[] { KeyCode.F6, false },
            new object[] { KeyCode.F7, false },
            new object[] { KeyCode.F8, false },
            new object[] { KeyCode.F9, false },
            new object[] { KeyCode.F10, false },
            new object[] { KeyCode.F11, false },
            new object[] { KeyCode.F12, false },
            new object[] { KeyCode.F13, false },
            new object[] { KeyCode.F14, false },
            new object[] { KeyCode.F15, false },
            new object[] { KeyCode.F16, false },
            new object[] { KeyCode.F17, false },
            new object[] { KeyCode.F18, false },
            new object[] { KeyCode.F19, false },
            new object[] { KeyCode.F20, false },
            new object[] { KeyCode.F21, false },
            new object[] { KeyCode.F22, false },
            new object[] { KeyCode.F23, false },
            new object[] { KeyCode.F24, false },
            new object[] { KeyCode.F25, false },
            new object[] { KeyCode.KeyPad0, false },
            new object[] { KeyCode.KeyPad1, false },
            new object[] { KeyCode.KeyPad2, false },
            new object[] { KeyCode.KeyPad3, false },
            new object[] { KeyCode.KeyPad4, false },
            new object[] { KeyCode.KeyPad5, false },
            new object[] { KeyCode.KeyPad6, false },
            new object[] { KeyCode.KeyPad7, false },
            new object[] { KeyCode.KeyPad8, false },
            new object[] { KeyCode.KeyPad9, false },
            new object[] { KeyCode.KeyPadEnter, false },
            new object[] { KeyCode.KeyPadEqual, false },
            new object[] { KeyCode.LeftShift, false },
            new object[] { KeyCode.LeftControl, false },
            new object[] { KeyCode.LeftAlt, false },
            new object[] { KeyCode.LeftSuper, false },
            new object[] { KeyCode.RightShift, false },
            new object[] { KeyCode.RightControl, false },
            new object[] { KeyCode.RightAlt, false },
            new object[] { KeyCode.RightSuper, false },
            new object[] { KeyCode.Menu, false },
        };

    /// <summary>
    /// Gets the data for testing the <see cref="KeyCodeExtensions.IsVisibleKey(KeyCode)"/> method.
    /// </summary>
    public static IEnumerable<object[]> IsVisibleKeyTestData =>
        new List<object[]>
        {
            new object[] { KeyCode.A, true },
            new object[] { KeyCode.B, true },
            new object[] { KeyCode.C, true },
            new object[] { KeyCode.D, true },
            new object[] { KeyCode.E, true },
            new object[] { KeyCode.F, true },
            new object[] { KeyCode.G, true },
            new object[] { KeyCode.H, true },
            new object[] { KeyCode.I, true },
            new object[] { KeyCode.J, true },
            new object[] { KeyCode.K, true },
            new object[] { KeyCode.L, true },
            new object[] { KeyCode.M, true },
            new object[] { KeyCode.N, true },
            new object[] { KeyCode.O, true },
            new object[] { KeyCode.P, true },
            new object[] { KeyCode.Q, true },
            new object[] { KeyCode.R, true },
            new object[] { KeyCode.S, true },
            new object[] { KeyCode.T, true },
            new object[] { KeyCode.U, true },
            new object[] { KeyCode.V, true },
            new object[] { KeyCode.W, true },
            new object[] { KeyCode.X, true },
            new object[] { KeyCode.Y, true },
            new object[] { KeyCode.Z, true },
            new object[] { KeyCode.Space, true },
            new object[] { KeyCode.Unknown, false },
            new object[] { KeyCode.D0, true },
            new object[] { KeyCode.D1, true },
            new object[] { KeyCode.D2, true },
            new object[] { KeyCode.D3, true },
            new object[] { KeyCode.D4, true },
            new object[] { KeyCode.D5, true },
            new object[] { KeyCode.D6, true },
            new object[] { KeyCode.D7, true },
            new object[] { KeyCode.D8, true },
            new object[] { KeyCode.D9, true },
            new object[] { KeyCode.Semicolon, true },
            new object[] { KeyCode.Equal, true },
            new object[] { KeyCode.Comma, true },
            new object[] { KeyCode.Minus, true },
            new object[] { KeyCode.Period, true },
            new object[] { KeyCode.Slash, true },
            new object[] { KeyCode.LeftBracket, true },
            new object[] { KeyCode.RightBracket, true },
            new object[] { KeyCode.Apostrophe, true },
            new object[] { KeyCode.KeyPadDivide, true },
            new object[] { KeyCode.KeyPadMultiply, true },
            new object[] { KeyCode.KeyPadSubtract, true },
            new object[] { KeyCode.KeyPadAdd, true },
            new object[] { KeyCode.KeyPadDecimal, true },
            new object[] { KeyCode.Backslash, true },
            new object[] { KeyCode.GraveAccent, true },
            new object[] { KeyCode.Escape, false },
            new object[] { KeyCode.Enter, false },
            new object[] { KeyCode.Tab, false },
            new object[] { KeyCode.Backspace, false },
            new object[] { KeyCode.Insert, false },
            new object[] { KeyCode.Delete, false },
            new object[] { KeyCode.Right, false },
            new object[] { KeyCode.Left, false },
            new object[] { KeyCode.Down, false },
            new object[] { KeyCode.Up, false },
            new object[] { KeyCode.PageUp, false },
            new object[] { KeyCode.PageDown, false },
            new object[] { KeyCode.Home, false },
            new object[] { KeyCode.End, false },
            new object[] { KeyCode.CapsLock, false },
            new object[] { KeyCode.ScrollLock, false },
            new object[] { KeyCode.NumLock, false },
            new object[] { KeyCode.PrintScreen, false },
            new object[] { KeyCode.Pause, false },
            new object[] { KeyCode.F1, false },
            new object[] { KeyCode.F2, false },
            new object[] { KeyCode.F3, false },
            new object[] { KeyCode.F4, false },
            new object[] { KeyCode.F5, false },
            new object[] { KeyCode.F6, false },
            new object[] { KeyCode.F7, false },
            new object[] { KeyCode.F8, false },
            new object[] { KeyCode.F9, false },
            new object[] { KeyCode.F10, false },
            new object[] { KeyCode.F11, false },
            new object[] { KeyCode.F12, false },
            new object[] { KeyCode.F13, false },
            new object[] { KeyCode.F14, false },
            new object[] { KeyCode.F15, false },
            new object[] { KeyCode.F16, false },
            new object[] { KeyCode.F17, false },
            new object[] { KeyCode.F18, false },
            new object[] { KeyCode.F19, false },
            new object[] { KeyCode.F20, false },
            new object[] { KeyCode.F21, false },
            new object[] { KeyCode.F22, false },
            new object[] { KeyCode.F23, false },
            new object[] { KeyCode.F24, false },
            new object[] { KeyCode.F25, false },
            new object[] { KeyCode.KeyPad0, true },
            new object[] { KeyCode.KeyPad1, true },
            new object[] { KeyCode.KeyPad2, true },
            new object[] { KeyCode.KeyPad3, true },
            new object[] { KeyCode.KeyPad4, true },
            new object[] { KeyCode.KeyPad5, true },
            new object[] { KeyCode.KeyPad6, true },
            new object[] { KeyCode.KeyPad7, true },
            new object[] { KeyCode.KeyPad8, true },
            new object[] { KeyCode.KeyPad9, true },
            new object[] { KeyCode.KeyPadEnter, false },
            new object[] { KeyCode.KeyPadEqual, false },
            new object[] { KeyCode.LeftShift, false },
            new object[] { KeyCode.LeftControl, false },
            new object[] { KeyCode.LeftAlt, false },
            new object[] { KeyCode.LeftSuper, false },
            new object[] { KeyCode.RightShift, false },
            new object[] { KeyCode.RightControl, false },
            new object[] { KeyCode.RightAlt, false },
            new object[] { KeyCode.RightSuper, false },
            new object[] { KeyCode.Menu, false },
        };

    /// <summary>
    /// Gets the data for testing the <see cref="KeyCodeExtensions.IsShiftKey(KeyCode)"/> method.
    /// </summary>
    public static IEnumerable<object[]> IsShiftKeyTestData =>
        new List<object[]>
        {
            new object[] { KeyCode.A, false },
            new object[] { KeyCode.B, false },
            new object[] { KeyCode.C, false },
            new object[] { KeyCode.D, false },
            new object[] { KeyCode.E, false },
            new object[] { KeyCode.F, false },
            new object[] { KeyCode.G, false },
            new object[] { KeyCode.H, false },
            new object[] { KeyCode.I, false },
            new object[] { KeyCode.J, false },
            new object[] { KeyCode.K, false },
            new object[] { KeyCode.L, false },
            new object[] { KeyCode.M, false },
            new object[] { KeyCode.N, false },
            new object[] { KeyCode.O, false },
            new object[] { KeyCode.P, false },
            new object[] { KeyCode.Q, false },
            new object[] { KeyCode.R, false },
            new object[] { KeyCode.S, false },
            new object[] { KeyCode.T, false },
            new object[] { KeyCode.U, false },
            new object[] { KeyCode.V, false },
            new object[] { KeyCode.W, false },
            new object[] { KeyCode.X, false },
            new object[] { KeyCode.Y, false },
            new object[] { KeyCode.Z, false },
            new object[] { KeyCode.Space, false },
            new object[] { KeyCode.Unknown, false },
            new object[] { KeyCode.Apostrophe, false },
            new object[] { KeyCode.Comma, false },
            new object[] { KeyCode.Minus, false },
            new object[] { KeyCode.Period, false },
            new object[] { KeyCode.Slash, false },
            new object[] { KeyCode.D0, false },
            new object[] { KeyCode.D1, false },
            new object[] { KeyCode.D2, false },
            new object[] { KeyCode.D3, false },
            new object[] { KeyCode.D4, false },
            new object[] { KeyCode.D5, false },
            new object[] { KeyCode.D6, false },
            new object[] { KeyCode.D7, false },
            new object[] { KeyCode.D8, false },
            new object[] { KeyCode.D9, false },
            new object[] { KeyCode.Semicolon, false },
            new object[] { KeyCode.Equal, false },
            new object[] { KeyCode.LeftBracket, false },
            new object[] { KeyCode.Backslash, false },
            new object[] { KeyCode.RightBracket, false },
            new object[] { KeyCode.GraveAccent, false },
            new object[] { KeyCode.Escape, false },
            new object[] { KeyCode.Enter, false },
            new object[] { KeyCode.Tab, false },
            new object[] { KeyCode.Backspace, false },
            new object[] { KeyCode.Insert, false },
            new object[] { KeyCode.Delete, false },
            new object[] { KeyCode.Right, false },
            new object[] { KeyCode.Left, false },
            new object[] { KeyCode.Down, false },
            new object[] { KeyCode.Up, false },
            new object[] { KeyCode.PageUp, false },
            new object[] { KeyCode.PageDown, false },
            new object[] { KeyCode.Home, false },
            new object[] { KeyCode.End, false },
            new object[] { KeyCode.CapsLock, false },
            new object[] { KeyCode.ScrollLock, false },
            new object[] { KeyCode.NumLock, false },
            new object[] { KeyCode.PrintScreen, false },
            new object[] { KeyCode.Pause, false },
            new object[] { KeyCode.F1, false },
            new object[] { KeyCode.F2, false },
            new object[] { KeyCode.F3, false },
            new object[] { KeyCode.F4, false },
            new object[] { KeyCode.F5, false },
            new object[] { KeyCode.F6, false },
            new object[] { KeyCode.F7, false },
            new object[] { KeyCode.F8, false },
            new object[] { KeyCode.F9, false },
            new object[] { KeyCode.F10, false },
            new object[] { KeyCode.F11, false },
            new object[] { KeyCode.F12, false },
            new object[] { KeyCode.F13, false },
            new object[] { KeyCode.F14, false },
            new object[] { KeyCode.F15, false },
            new object[] { KeyCode.F16, false },
            new object[] { KeyCode.F17, false },
            new object[] { KeyCode.F18, false },
            new object[] { KeyCode.F19, false },
            new object[] { KeyCode.F20, false },
            new object[] { KeyCode.F21, false },
            new object[] { KeyCode.F22, false },
            new object[] { KeyCode.F23, false },
            new object[] { KeyCode.F24, false },
            new object[] { KeyCode.F25, false },
            new object[] { KeyCode.KeyPad0, false },
            new object[] { KeyCode.KeyPad1, false },
            new object[] { KeyCode.KeyPad2, false },
            new object[] { KeyCode.KeyPad3, false },
            new object[] { KeyCode.KeyPad4, false },
            new object[] { KeyCode.KeyPad5, false },
            new object[] { KeyCode.KeyPad6, false },
            new object[] { KeyCode.KeyPad7, false },
            new object[] { KeyCode.KeyPad8, false },
            new object[] { KeyCode.KeyPad9, false },
            new object[] { KeyCode.KeyPadDecimal, false },
            new object[] { KeyCode.KeyPadDivide, false },
            new object[] { KeyCode.KeyPadMultiply, false },
            new object[] { KeyCode.KeyPadSubtract, false },
            new object[] { KeyCode.KeyPadAdd, false },
            new object[] { KeyCode.KeyPadEnter, false },
            new object[] { KeyCode.KeyPadEqual, false },
            new object[] { KeyCode.LeftShift, true },
            new object[] { KeyCode.LeftControl, false },
            new object[] { KeyCode.LeftAlt, false },
            new object[] { KeyCode.LeftSuper, false },
            new object[] { KeyCode.RightShift, true },
            new object[] { KeyCode.RightControl, false },
            new object[] { KeyCode.RightAlt, false },
            new object[] { KeyCode.RightSuper, false },
            new object[] { KeyCode.Menu, false },
        };

    /// <summary>
    /// Gets the data for testing the <see cref="KeyCodeExtensions.IsArrowKey(KeyCode)"/> method.
    /// </summary>
    public static IEnumerable<object[]> IsArrowKeyTestData =>
        new List<object[]>
        {
            new object[] { KeyCode.A, false },
            new object[] { KeyCode.B, false },
            new object[] { KeyCode.C, false },
            new object[] { KeyCode.D, false },
            new object[] { KeyCode.E, false },
            new object[] { KeyCode.F, false },
            new object[] { KeyCode.G, false },
            new object[] { KeyCode.H, false },
            new object[] { KeyCode.I, false },
            new object[] { KeyCode.J, false },
            new object[] { KeyCode.K, false },
            new object[] { KeyCode.L, false },
            new object[] { KeyCode.M, false },
            new object[] { KeyCode.N, false },
            new object[] { KeyCode.O, false },
            new object[] { KeyCode.P, false },
            new object[] { KeyCode.Q, false },
            new object[] { KeyCode.R, false },
            new object[] { KeyCode.S, false },
            new object[] { KeyCode.T, false },
            new object[] { KeyCode.U, false },
            new object[] { KeyCode.V, false },
            new object[] { KeyCode.W, false },
            new object[] { KeyCode.X, false },
            new object[] { KeyCode.Y, false },
            new object[] { KeyCode.Z, false },
            new object[] { KeyCode.Space, false },
            new object[] { KeyCode.Unknown, false },
            new object[] { KeyCode.Apostrophe, false },
            new object[] { KeyCode.Comma, false },
            new object[] { KeyCode.Minus, false },
            new object[] { KeyCode.Period, false },
            new object[] { KeyCode.Slash, false },
            new object[] { KeyCode.D0, false },
            new object[] { KeyCode.D1, false },
            new object[] { KeyCode.D2, false },
            new object[] { KeyCode.D3, false },
            new object[] { KeyCode.D4, false },
            new object[] { KeyCode.D5, false },
            new object[] { KeyCode.D6, false },
            new object[] { KeyCode.D7, false },
            new object[] { KeyCode.D8, false },
            new object[] { KeyCode.D9, false },
            new object[] { KeyCode.Semicolon, false },
            new object[] { KeyCode.Equal, false },
            new object[] { KeyCode.LeftBracket, false },
            new object[] { KeyCode.Backslash, false },
            new object[] { KeyCode.RightBracket, false },
            new object[] { KeyCode.GraveAccent, false },
            new object[] { KeyCode.Escape, false },
            new object[] { KeyCode.Enter, false },
            new object[] { KeyCode.Tab, false },
            new object[] { KeyCode.Backspace, false },
            new object[] { KeyCode.Insert, false },
            new object[] { KeyCode.Delete, false },
            new object[] { KeyCode.Right, true },
            new object[] { KeyCode.Left, true },
            new object[] { KeyCode.Down, true },
            new object[] { KeyCode.Up, true },
            new object[] { KeyCode.PageUp, false },
            new object[] { KeyCode.PageDown, false },
            new object[] { KeyCode.Home, false },
            new object[] { KeyCode.End, false },
            new object[] { KeyCode.CapsLock, false },
            new object[] { KeyCode.ScrollLock, false },
            new object[] { KeyCode.NumLock, false },
            new object[] { KeyCode.PrintScreen, false },
            new object[] { KeyCode.Pause, false },
            new object[] { KeyCode.F1, false },
            new object[] { KeyCode.F2, false },
            new object[] { KeyCode.F3, false },
            new object[] { KeyCode.F4, false },
            new object[] { KeyCode.F5, false },
            new object[] { KeyCode.F6, false },
            new object[] { KeyCode.F7, false },
            new object[] { KeyCode.F8, false },
            new object[] { KeyCode.F9, false },
            new object[] { KeyCode.F10, false },
            new object[] { KeyCode.F11, false },
            new object[] { KeyCode.F12, false },
            new object[] { KeyCode.F13, false },
            new object[] { KeyCode.F14, false },
            new object[] { KeyCode.F15, false },
            new object[] { KeyCode.F16, false },
            new object[] { KeyCode.F17, false },
            new object[] { KeyCode.F18, false },
            new object[] { KeyCode.F19, false },
            new object[] { KeyCode.F20, false },
            new object[] { KeyCode.F21, false },
            new object[] { KeyCode.F22, false },
            new object[] { KeyCode.F23, false },
            new object[] { KeyCode.F24, false },
            new object[] { KeyCode.F25, false },
            new object[] { KeyCode.KeyPad0, false },
            new object[] { KeyCode.KeyPad1, false },
            new object[] { KeyCode.KeyPad2, false },
            new object[] { KeyCode.KeyPad3, false },
            new object[] { KeyCode.KeyPad4, false },
            new object[] { KeyCode.KeyPad5, false },
            new object[] { KeyCode.KeyPad6, false },
            new object[] { KeyCode.KeyPad7, false },
            new object[] { KeyCode.KeyPad8, false },
            new object[] { KeyCode.KeyPad9, false },
            new object[] { KeyCode.KeyPadDecimal, false },
            new object[] { KeyCode.KeyPadDivide, false },
            new object[] { KeyCode.KeyPadMultiply, false },
            new object[] { KeyCode.KeyPadSubtract, false },
            new object[] { KeyCode.KeyPadAdd, false },
            new object[] { KeyCode.KeyPadEnter, false },
            new object[] { KeyCode.KeyPadEqual, false },
            new object[] { KeyCode.LeftShift, false },
            new object[] { KeyCode.LeftControl, false },
            new object[] { KeyCode.LeftAlt, false },
            new object[] { KeyCode.LeftSuper, false },
            new object[] { KeyCode.RightShift, false },
            new object[] { KeyCode.RightControl, false },
            new object[] { KeyCode.RightAlt, false },
            new object[] { KeyCode.RightSuper, false },
            new object[] { KeyCode.Menu, false },
        };

    /// <summary>
    /// Gets the data for testing the <see cref="KeyCodeExtensions.IsCtrlKey(KeyCode)"/> method.
    /// </summary>
    public static IEnumerable<object[]> IsCtrlKeyTestData =>
        new List<object[]>
        {
            new object[] { KeyCode.A, false },
            new object[] { KeyCode.B, false },
            new object[] { KeyCode.C, false },
            new object[] { KeyCode.D, false },
            new object[] { KeyCode.E, false },
            new object[] { KeyCode.F, false },
            new object[] { KeyCode.G, false },
            new object[] { KeyCode.H, false },
            new object[] { KeyCode.I, false },
            new object[] { KeyCode.J, false },
            new object[] { KeyCode.K, false },
            new object[] { KeyCode.L, false },
            new object[] { KeyCode.M, false },
            new object[] { KeyCode.N, false },
            new object[] { KeyCode.O, false },
            new object[] { KeyCode.P, false },
            new object[] { KeyCode.Q, false },
            new object[] { KeyCode.R, false },
            new object[] { KeyCode.S, false },
            new object[] { KeyCode.T, false },
            new object[] { KeyCode.U, false },
            new object[] { KeyCode.V, false },
            new object[] { KeyCode.W, false },
            new object[] { KeyCode.X, false },
            new object[] { KeyCode.Y, false },
            new object[] { KeyCode.Z, false },
            new object[] { KeyCode.Space, false },
            new object[] { KeyCode.Unknown, false },
            new object[] { KeyCode.Apostrophe, false },
            new object[] { KeyCode.Comma, false },
            new object[] { KeyCode.Minus, false },
            new object[] { KeyCode.Period, false },
            new object[] { KeyCode.Slash, false },
            new object[] { KeyCode.D0, false },
            new object[] { KeyCode.D1, false },
            new object[] { KeyCode.D2, false },
            new object[] { KeyCode.D3, false },
            new object[] { KeyCode.D4, false },
            new object[] { KeyCode.D5, false },
            new object[] { KeyCode.D6, false },
            new object[] { KeyCode.D7, false },
            new object[] { KeyCode.D8, false },
            new object[] { KeyCode.D9, false },
            new object[] { KeyCode.Semicolon, false },
            new object[] { KeyCode.Equal, false },
            new object[] { KeyCode.LeftBracket, false },
            new object[] { KeyCode.Backslash, false },
            new object[] { KeyCode.RightBracket, false },
            new object[] { KeyCode.GraveAccent, false },
            new object[] { KeyCode.Escape, false },
            new object[] { KeyCode.Enter, false },
            new object[] { KeyCode.Tab, false },
            new object[] { KeyCode.Backspace, false },
            new object[] { KeyCode.Insert, false },
            new object[] { KeyCode.Delete, false },
            new object[] { KeyCode.Right, false },
            new object[] { KeyCode.Left, false },
            new object[] { KeyCode.Down, false },
            new object[] { KeyCode.Up, false },
            new object[] { KeyCode.PageUp, false },
            new object[] { KeyCode.PageDown, false },
            new object[] { KeyCode.Home, false },
            new object[] { KeyCode.End, false },
            new object[] { KeyCode.CapsLock, false },
            new object[] { KeyCode.ScrollLock, false },
            new object[] { KeyCode.NumLock, false },
            new object[] { KeyCode.PrintScreen, false },
            new object[] { KeyCode.Pause, false },
            new object[] { KeyCode.F1, false },
            new object[] { KeyCode.F2, false },
            new object[] { KeyCode.F3, false },
            new object[] { KeyCode.F4, false },
            new object[] { KeyCode.F5, false },
            new object[] { KeyCode.F6, false },
            new object[] { KeyCode.F7, false },
            new object[] { KeyCode.F8, false },
            new object[] { KeyCode.F9, false },
            new object[] { KeyCode.F10, false },
            new object[] { KeyCode.F11, false },
            new object[] { KeyCode.F12, false },
            new object[] { KeyCode.F13, false },
            new object[] { KeyCode.F14, false },
            new object[] { KeyCode.F15, false },
            new object[] { KeyCode.F16, false },
            new object[] { KeyCode.F17, false },
            new object[] { KeyCode.F18, false },
            new object[] { KeyCode.F19, false },
            new object[] { KeyCode.F20, false },
            new object[] { KeyCode.F21, false },
            new object[] { KeyCode.F22, false },
            new object[] { KeyCode.F23, false },
            new object[] { KeyCode.F24, false },
            new object[] { KeyCode.F25, false },
            new object[] { KeyCode.KeyPad0, false },
            new object[] { KeyCode.KeyPad1, false },
            new object[] { KeyCode.KeyPad2, false },
            new object[] { KeyCode.KeyPad3, false },
            new object[] { KeyCode.KeyPad4, false },
            new object[] { KeyCode.KeyPad5, false },
            new object[] { KeyCode.KeyPad6, false },
            new object[] { KeyCode.KeyPad7, false },
            new object[] { KeyCode.KeyPad8, false },
            new object[] { KeyCode.KeyPad9, false },
            new object[] { KeyCode.KeyPadDecimal, false },
            new object[] { KeyCode.KeyPadDivide, false },
            new object[] { KeyCode.KeyPadMultiply, false },
            new object[] { KeyCode.KeyPadSubtract, false },
            new object[] { KeyCode.KeyPadAdd, false },
            new object[] { KeyCode.KeyPadEnter, false },
            new object[] { KeyCode.KeyPadEqual, false },
            new object[] { KeyCode.LeftShift, false },
            new object[] { KeyCode.LeftControl, true },
            new object[] { KeyCode.LeftAlt, false },
            new object[] { KeyCode.LeftSuper, false },
            new object[] { KeyCode.RightShift, false },
            new object[] { KeyCode.RightControl, true },
            new object[] { KeyCode.RightAlt, false },
            new object[] { KeyCode.RightSuper, false },
            new object[] { KeyCode.Menu, false },
        };

    /// <summary>
    /// Gets the data for testing the <see cref="KeyCodeExtensions.ToChar(KeyCode, bool)"/> method.
    /// </summary>
    public static IEnumerable<object[]> ToCharTestData =>
        new List<object[]>
        {
            new object[] { KeyCode.A, true, 'A' },
            new object[] { KeyCode.A, false, 'a' },
            new object[] { KeyCode.B, true, 'B' },
            new object[] { KeyCode.B, false, 'b' },
            new object[] { KeyCode.C, true, 'C' },
            new object[] { KeyCode.C, false, 'c' },
            new object[] { KeyCode.D, true, 'D' },
            new object[] { KeyCode.D, false, 'd' },
            new object[] { KeyCode.E, true, 'E' },
            new object[] { KeyCode.E, false, 'e' },
            new object[] { KeyCode.F, true, 'F' },
            new object[] { KeyCode.F, false, 'f' },
            new object[] { KeyCode.G, true, 'G' },
            new object[] { KeyCode.G, false, 'g' },
            new object[] { KeyCode.H, true, 'H' },
            new object[] { KeyCode.H, false, 'h' },
            new object[] { KeyCode.I, true, 'I' },
            new object[] { KeyCode.I, false, 'i' },
            new object[] { KeyCode.J, true, 'J' },
            new object[] { KeyCode.J, false, 'j' },
            new object[] { KeyCode.K, true, 'K' },
            new object[] { KeyCode.K, false, 'k' },
            new object[] { KeyCode.L, true, 'L' },
            new object[] { KeyCode.L, false, 'l' },
            new object[] { KeyCode.M, true, 'M' },
            new object[] { KeyCode.M, false, 'm' },
            new object[] { KeyCode.N, true, 'N' },
            new object[] { KeyCode.N, false, 'n' },
            new object[] { KeyCode.O, true, 'O' },
            new object[] { KeyCode.O, false, 'o' },
            new object[] { KeyCode.P, true, 'P' },
            new object[] { KeyCode.P, false, 'p' },
            new object[] { KeyCode.Q, true, 'Q' },
            new object[] { KeyCode.Q, false, 'q' },
            new object[] { KeyCode.R, true, 'R' },
            new object[] { KeyCode.R, false, 'r' },
            new object[] { KeyCode.S, true, 'S' },
            new object[] { KeyCode.S, false, 's' },
            new object[] { KeyCode.T, true, 'T' },
            new object[] { KeyCode.T, false, 't' },
            new object[] { KeyCode.U, true, 'U' },
            new object[] { KeyCode.U, false, 'u' },
            new object[] { KeyCode.V, true, 'V' },
            new object[] { KeyCode.V, false, 'v' },
            new object[] { KeyCode.W, true, 'W' },
            new object[] { KeyCode.W, false, 'w' },
            new object[] { KeyCode.X, true, 'X' },
            new object[] { KeyCode.X, false, 'x' },
            new object[] { KeyCode.Y, true, 'Y' },
            new object[] { KeyCode.Y, false, 'y' },
            new object[] { KeyCode.Z, true, 'Z' },
            new object[] { KeyCode.Z, false, 'z' },
            new object[] { KeyCode.Apostrophe, true, '\"' },
            new object[] { KeyCode.Apostrophe, false, '\'' },
            new object[] { KeyCode.Semicolon, true, ':' },
            new object[] { KeyCode.Semicolon, false, ';' },
            new object[] { KeyCode.Comma, true, '<' },
            new object[] { KeyCode.Comma, false, ',' },
            new object[] { KeyCode.Period, true, '>' },
            new object[] { KeyCode.Period, false, '.' },
            new object[] { KeyCode.Slash, true, '?' },
            new object[] { KeyCode.Slash, false, '/' },
            new object[] { KeyCode.Minus, true, '_' },
            new object[] { KeyCode.Minus, false, '-' },
            new object[] { KeyCode.Equal, true, '+' },
            new object[] { KeyCode.Equal, false, '=' },
            new object[] { KeyCode.Backslash, true, '|' },
            new object[] { KeyCode.Backslash, false, '\\' },
            new object[] { KeyCode.LeftBracket, true, '{' },
            new object[] { KeyCode.LeftBracket, false, '[' },
            new object[] { KeyCode.RightBracket, true, '}' },
            new object[] { KeyCode.RightBracket, false, ']' },
            new object[] { KeyCode.D0, true, ')' },
            new object[] { KeyCode.D0, false, '0' },
            new object[] { KeyCode.D1, true, '!' },
            new object[] { KeyCode.D1, false, '1' },
            new object[] { KeyCode.D2, true, '@' },
            new object[] { KeyCode.D2, false, '2' },
            new object[] { KeyCode.D3, true, '#' },
            new object[] { KeyCode.D3, false, '3' },
            new object[] { KeyCode.D4, true, '$' },
            new object[] { KeyCode.D4, false, '4' },
            new object[] { KeyCode.D5, true, '%' },
            new object[] { KeyCode.D5, false, '5' },
            new object[] { KeyCode.D6, true, '^' },
            new object[] { KeyCode.D6, false, '6' },
            new object[] { KeyCode.D7, true, '&' },
            new object[] { KeyCode.D7, false, '7' },
            new object[] { KeyCode.D8, true, '*' },
            new object[] { KeyCode.D8, false, '8' },
            new object[] { KeyCode.D9, true, '(' },
            new object[] { KeyCode.D9, false, '9' },
            new object[] { KeyCode.GraveAccent, true, '~' },
            new object[] { KeyCode.GraveAccent, false, '`' },
            new object[] { KeyCode.KeyPad0, true, KeyboardKeyGroups.InvalidCharacter },
            new object[] { KeyCode.KeyPad0, false, '0' },
            new object[] { KeyCode.KeyPad1, true, KeyboardKeyGroups.InvalidCharacter },
            new object[] { KeyCode.KeyPad1, false, '1' },
            new object[] { KeyCode.KeyPad2, true, KeyboardKeyGroups.InvalidCharacter },
            new object[] { KeyCode.KeyPad2, false, '2' },
            new object[] { KeyCode.KeyPad3, true, KeyboardKeyGroups.InvalidCharacter },
            new object[] { KeyCode.KeyPad3, false, '3' },
            new object[] { KeyCode.KeyPad4, true, KeyboardKeyGroups.InvalidCharacter },
            new object[] { KeyCode.KeyPad4, false, '4' },
            new object[] { KeyCode.KeyPad5, true, KeyboardKeyGroups.InvalidCharacter },
            new object[] { KeyCode.KeyPad5, false, '5' },
            new object[] { KeyCode.KeyPad6, true, KeyboardKeyGroups.InvalidCharacter },
            new object[] { KeyCode.KeyPad6, false, '6' },
            new object[] { KeyCode.KeyPad7, true, KeyboardKeyGroups.InvalidCharacter },
            new object[] { KeyCode.KeyPad7, false, '7' },
            new object[] { KeyCode.KeyPad8, true, KeyboardKeyGroups.InvalidCharacter },
            new object[] { KeyCode.KeyPad8, false, '8' },
            new object[] { KeyCode.KeyPad9, true, KeyboardKeyGroups.InvalidCharacter },
            new object[] { KeyCode.KeyPad9, false, '9' },
            new object[] { KeyCode.KeyPadDecimal, true, '.' },
            new object[] { KeyCode.KeyPadDecimal, false, '.' },
            new object[] { KeyCode.KeyPadDivide, true, '/' },
            new object[] { KeyCode.KeyPadDivide, false, '/' },
            new object[] { KeyCode.KeyPadMultiply, true, '*' },
            new object[] { KeyCode.KeyPadMultiply, false, '*' },
            new object[] { KeyCode.KeyPadSubtract, true, '-' },
            new object[] { KeyCode.KeyPadSubtract, false, '-' },
            new object[] { KeyCode.KeyPadAdd, true, '+' },
            new object[] { KeyCode.KeyPadAdd, false, '+' },
        };

    /// <summary>
    /// Gets the data for testing the <see cref="KeyCodeExtensions.IsMoveCursorKey(KeyCode)"/> method.
    /// </summary>
    public static IEnumerable<object[]> IsMoveCursorKeyTestData =>
        new List<object[]>
        {
            new object[] { KeyCode.A, false },
            new object[] { KeyCode.B, false },
            new object[] { KeyCode.C, false },
            new object[] { KeyCode.D, false },
            new object[] { KeyCode.E, false },
            new object[] { KeyCode.F, false },
            new object[] { KeyCode.G, false },
            new object[] { KeyCode.H, false },
            new object[] { KeyCode.I, false },
            new object[] { KeyCode.J, false },
            new object[] { KeyCode.K, false },
            new object[] { KeyCode.L, false },
            new object[] { KeyCode.M, false },
            new object[] { KeyCode.N, false },
            new object[] { KeyCode.O, false },
            new object[] { KeyCode.P, false },
            new object[] { KeyCode.Q, false },
            new object[] { KeyCode.R, false },
            new object[] { KeyCode.S, false },
            new object[] { KeyCode.T, false },
            new object[] { KeyCode.U, false },
            new object[] { KeyCode.V, false },
            new object[] { KeyCode.W, false },
            new object[] { KeyCode.X, false },
            new object[] { KeyCode.Y, false },
            new object[] { KeyCode.Z, false },
            new object[] { KeyCode.Space, false },
            new object[] { KeyCode.Unknown, false },
            new object[] { KeyCode.Apostrophe, false },
            new object[] { KeyCode.Comma, false },
            new object[] { KeyCode.Minus, false },
            new object[] { KeyCode.Period, false },
            new object[] { KeyCode.Slash, false },
            new object[] { KeyCode.D0, false },
            new object[] { KeyCode.D1, false },
            new object[] { KeyCode.D2, false },
            new object[] { KeyCode.D3, false },
            new object[] { KeyCode.D4, false },
            new object[] { KeyCode.D5, false },
            new object[] { KeyCode.D6, false },
            new object[] { KeyCode.D7, false },
            new object[] { KeyCode.D8, false },
            new object[] { KeyCode.D9, false },
            new object[] { KeyCode.Semicolon, false },
            new object[] { KeyCode.Equal, false },
            new object[] { KeyCode.LeftBracket, false },
            new object[] { KeyCode.Backslash, false },
            new object[] { KeyCode.RightBracket, false },
            new object[] { KeyCode.GraveAccent, false },
            new object[] { KeyCode.Escape, false },
            new object[] { KeyCode.Enter, false },
            new object[] { KeyCode.Tab, false },
            new object[] { KeyCode.Backspace, false },
            new object[] { KeyCode.Insert, false },
            new object[] { KeyCode.Delete, false },
            new object[] { KeyCode.Right, true },
            new object[] { KeyCode.Left, true },
            new object[] { KeyCode.Down, false },
            new object[] { KeyCode.Up, false },
            new object[] { KeyCode.PageUp, true },
            new object[] { KeyCode.PageDown, true },
            new object[] { KeyCode.Home, true },
            new object[] { KeyCode.End, true },
            new object[] { KeyCode.CapsLock, false },
            new object[] { KeyCode.ScrollLock, false },
            new object[] { KeyCode.NumLock, false },
            new object[] { KeyCode.PrintScreen, false },
            new object[] { KeyCode.Pause, false },
            new object[] { KeyCode.F1, false },
            new object[] { KeyCode.F2, false },
            new object[] { KeyCode.F3, false },
            new object[] { KeyCode.F4, false },
            new object[] { KeyCode.F5, false },
            new object[] { KeyCode.F6, false },
            new object[] { KeyCode.F7, false },
            new object[] { KeyCode.F8, false },
            new object[] { KeyCode.F9, false },
            new object[] { KeyCode.F10, false },
            new object[] { KeyCode.F11, false },
            new object[] { KeyCode.F12, false },
            new object[] { KeyCode.F13, false },
            new object[] { KeyCode.F14, false },
            new object[] { KeyCode.F15, false },
            new object[] { KeyCode.F16, false },
            new object[] { KeyCode.F17, false },
            new object[] { KeyCode.F18, false },
            new object[] { KeyCode.F19, false },
            new object[] { KeyCode.F20, false },
            new object[] { KeyCode.F21, false },
            new object[] { KeyCode.F22, false },
            new object[] { KeyCode.F23, false },
            new object[] { KeyCode.F24, false },
            new object[] { KeyCode.F25, false },
            new object[] { KeyCode.KeyPad0, false },
            new object[] { KeyCode.KeyPad1, false },
            new object[] { KeyCode.KeyPad2, false },
            new object[] { KeyCode.KeyPad3, false },
            new object[] { KeyCode.KeyPad4, false },
            new object[] { KeyCode.KeyPad5, false },
            new object[] { KeyCode.KeyPad6, false },
            new object[] { KeyCode.KeyPad7, false },
            new object[] { KeyCode.KeyPad8, false },
            new object[] { KeyCode.KeyPad9, false },
            new object[] { KeyCode.KeyPadDecimal, false },
            new object[] { KeyCode.KeyPadDivide, false },
            new object[] { KeyCode.KeyPadMultiply, false },
            new object[] { KeyCode.KeyPadSubtract, false },
            new object[] { KeyCode.KeyPadAdd, false },
            new object[] { KeyCode.KeyPadEnter, false },
            new object[] { KeyCode.KeyPadEqual, false },
            new object[] { KeyCode.LeftShift, false },
            new object[] { KeyCode.LeftControl, false },
            new object[] { KeyCode.LeftAlt, false },
            new object[] { KeyCode.LeftSuper, false },
            new object[] { KeyCode.RightShift, false },
            new object[] { KeyCode.RightControl, false },
            new object[] { KeyCode.RightAlt, false },
            new object[] { KeyCode.RightSuper, false },
            new object[] { KeyCode.Menu, false },
        };
    #endregion

    [Theory]
    [MemberData(nameof(IsLetterKeyTestData))]
    public void IsLetterKey_WhenInvoked_ReturnsCorrectResult(KeyCode key, bool expected)
    {
        // Arrange & Act
        var actual = key.IsLetterKey();

        // Assert
        actual.Should().Be(expected);
    }

    [Theory]
    [MemberData(nameof(IsNumberKeyTestData))]
    public void IsNumberKey_WhenInvoked_ReturnsCorrectResult(KeyCode key, bool expected)
    {
        // Arrange & Act
        var actual = key.IsNumberKey();

        // Assert
        actual.Should().Be(expected);
    }

    [Theory]
    [MemberData(nameof(IsSymbolKeyTestData))]
    public void IsSymbolKey_WhenInvoked_ReturnsCorrectResult(KeyCode key, bool expected)
    {
        // Arrange & Act
        var actual = key.IsSymbolKey();

        // Assert
        actual.Should().Be(expected);
    }

    [Theory]
    [MemberData(nameof(IsVisibleKeyTestData))]
    public void IsVisibleKey_WhenInvoked_ReturnsCorrectResult(KeyCode key, bool expected)
    {
        // Arrange & Act
        var actual = key.IsVisibleKey();

        // Assert
        actual.Should().Be(expected);
    }

    [Theory]
    [MemberData(nameof(IsShiftKeyTestData))]
    public void IsShiftKey_WhenInvoked_ReturnsCorrectResult(KeyCode key, bool expected)
    {
        // Arrange & Act
        var actual = key.IsShiftKey();

        // Assert
        actual.Should().Be(expected);
    }

    [Theory]
    [MemberData(nameof(IsArrowKeyTestData))]
    public void IsArrowKey_WhenInvoked_ReturnsCorrectResult(KeyCode key, bool expected)
    {
        // Arrange & Act
        var actual = key.IsArrowKey();

        // Assert
        actual.Should().Be(expected);
    }

    [Theory]
    [MemberData(nameof(IsCtrlKeyTestData))]
    public void IsCtrlKey_WhenInvoked_ReturnsCorrectResult(KeyCode key, bool expected)
    {
        // Arrange & Act
        var actual = key.IsCtrlKey();

        // Assert
        actual.Should().Be(expected);
    }

    [Theory]
    [MemberData(nameof(ToCharTestData))]
    public void ToChar_WhenAnyShiftKeyDownInvoked_ReturnsCorrectResult(KeyCode key, bool anyShiftKeysDown, char expected)
    {
        // Arrange & Act
        var actual = key.ToChar(anyShiftKeysDown);

        // Assert
        actual.Should().Be(expected);
    }

    [Theory]
    [MemberData(nameof(IsMoveCursorKeyTestData))]
    public void IsMoveCursorKeyTestData_WhenInvoked_ReturnsCorrectResult(KeyCode key, bool expected)
    {
        // Arrange & Act
        var actual = key.IsMoveCursorKey();

        // Assert
        actual.Should().Be(expected);
    }
}
